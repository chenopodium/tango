/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tango.models.external;

import java.io.File;
import tango.prefs.UserPref;
import tango.utils.FileTools;

/**
 *
 * @author Chantal
 */
public class PickFilePanel extends javax.swing.JPanel {

    UserPref pref;
    /**
     * Creates new form PickFilePanel
     */
    public PickFilePanel(UserPref pref) {
        this.pref = pref;
        initComponents();
        this.txtFile.setText(pref.getValue());
        readContent(txtFile.getText());
        txtFile.setToolTipText(pref.getDescription());
    }

//    public File getFile() {
//        if (txtFile.getText() == null) return null;
//        File f = new File(txtFile.getText());
//        return f;
//    }
    
    public String getContent() {
        return jTextArea1.getText();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOpen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document-open-4.png"))); // NOI18N
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        jLabel1.setText("File:");

        txtFile.setText("filename");
        txtFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFileActionPerformed(evt);
            }
        });
        txtFile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFileFocusLost(evt);
            }
        });

        jLabel2.setText("Or just enter (or copy paste) the content here (comma separated):");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("45, 90, 180");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnOpen, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
       String txt = ExternalTools.getCsvFile(pref);
       if (txt != null) {
           txtFile.setText(txt);
           getText();
       }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void txtFileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFileFocusLost
        getText();
    }//GEN-LAST:event_txtFileFocusLost

    private void txtFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFileActionPerformed
          getText();
    }//GEN-LAST:event_txtFileActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtFile;
    // End of variables declaration//GEN-END:variables

    private void readContent(String txt) {
        if (txt == null) return;
        File f = new File(txt);
        if (f.exists()) {
            String content = FileTools.getFileAsString(txt, false, true);
            if (content != null) {
                
                content = content.replace(";", ",");
                content = content.replace("\t", ",");
                content = content.replace(",,", ",");
                this.jTextArea1.setText(content);
            }
        }
    }

    public void getText() {
       String txt = this.txtFile.getText();
       if (txt != null) {
          pref.setValue(txt);
      
          readContent(txt);
      }
    }
}
